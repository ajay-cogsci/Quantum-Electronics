# -*- coding: utf-8 -*-
"""QuantumDecoders.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vo2bqX3ZIh0JSC0gfshIHfq-VyBW3cyc
"""

!pip install qiskit

from qiskit import Aer, execute, QuantumCircuit
from qiskit.visualization import plot_histogram

"""**Line Decoder (1-to-2 Line)**"""

n_q=1
n_c=2


line_decoder = QuantumCircuit(n_q,n_c)

#line_decoder.x(0) Uncomment if input required is 1 bit

line_decoder.measure(0,1)
line_decoder.x(0)
line_decoder.measure(0,0)

line_decoder.draw()


#ld_counts = execute(line_decoder,Aer.get_backend('qasm_simulator')).result().get_counts()
#plot_histogram(ld_counts)

"""**2-to-4 Line Decoder**"""

tf_decoder = QuantumCircuit(6,4)

#tf_decoder.x(1)
#tf_decoder.x(0)
tf_decoder.barrier()

tf_decoder.ccx(0,1,5)
tf_decoder.measure(5,3)


tf_decoder.x(0)
tf_decoder.ccx(0,1,4)
tf_decoder.measure(4,2)

tf_decoder.x(0)
tf_decoder.x(1)
tf_decoder.ccx(0,1,3)
tf_decoder.measure(3,1)

tf_decoder.x(0)
tf_decoder.ccx(0,1,2)
tf_decoder.measure(2,0)

tf_decoder.draw()


#tf_decoder_counts = execute(tf_decoder, Aer.get_backend('qasm_simulator')).result().get_counts()
#plot_histogram(tf_decoder_counts)

